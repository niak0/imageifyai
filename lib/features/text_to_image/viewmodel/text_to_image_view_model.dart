import '../../../core/base/base_view_model.dart';
import '../../../core/services/api_service.dart';
import '../../../core/services/cache_service.dart';
import '../model/chat_message.dart';

class TextToImageViewModel extends BaseViewModel {
  final ApiService _apiService = ApiService();
  final CacheService _cacheService = CacheService();

  final List<ChatMessage> _messages = [];
  List<ChatMessage> get messages => List.unmodifiable(_messages);

  // Ã–rnek sÃ¼rpriz promptlar
  final List<String> _surprisePrompts = [
    'Neon Ä±ÅŸÄ±klarÄ±yla aydÄ±nlatÄ±lmÄ±ÅŸ cyberpunk ÅŸehir manzarasÄ±',
    'Mistik bir ormanÄ±n derinliklerinde dans eden periler',
    'Steampunk tarzÄ±nda mekanik bir ejderha',
    'Uzay boÅŸluÄŸunda sÃ¼zÃ¼len renkli baloncuklar iÃ§inde kelebekler',
    'Antik bir tapÄ±naÄŸÄ±n iÃ§inde meditasyon yapan robot keÅŸiÅŸler',
    'Kristal daÄŸlarÄ±n arasÄ±nda uÃ§an fosforlu balinalar',
    'Retro-fÃ¼tÃ¼ristik bir uzay istasyonunda gÃ¼nbatÄ±mÄ±',
    'YaÄŸmurlu bir gecede neon tabelalar altÄ±nda yÃ¼rÃ¼yen samuray',
  ];

  void initialize() {
    // BaÅŸlangÄ±Ã§ mesajÄ±nÄ± ekle
    _messages.add(
      ChatMessage.bot(
        message: 'Merhaba! ğŸ‘‹ Ben AI AsistanÄ±nÄ±zÄ±m. OluÅŸturmak istediÄŸiniz gÃ¶rsel hakkÄ±nda bana bilgi verebilir misiniz?',
      ),
    );
    notifyListeners();
  }

  Future<void> sendMessage(String message) async {
    if (message.trim().isEmpty) return;

    // KullanÄ±cÄ± mesajÄ±nÄ± ekle
    _messages.add(ChatMessage.user(message));
    notifyListeners();

    await handleAsync(() async {
      try {
        // Loading mesajÄ±nÄ± ekle
        final loadingMessage = ChatMessage.loading();
        _messages.add(loadingMessage);
        notifyListeners();

        // Cache'den kontrol et
        final cachedImage = _cacheService.getCachedImage(message);
        if (cachedImage != null) {
          _messages.remove(loadingMessage);
          _messages.add(ChatMessage.bot(
            message: 'Ä°ÅŸte sizin iÃ§in oluÅŸturduÄŸum gÃ¶rsel:',
            imageUrl: cachedImage,
          ));
          return;
        }

        // API isteÄŸi
        final response = await _apiService.post(
          '/generate-image',
          body: {'prompt': message},
        );

        // Loading mesajÄ±nÄ± kaldÄ±r
        _messages.remove(loadingMessage);

        // YanÄ±tÄ± ekle
        _messages.add(ChatMessage.bot(
          message: 'Ä°ÅŸte sizin iÃ§in oluÅŸturduÄŸum gÃ¶rsel:',
          imageUrl: response['image_url'],
        ));

        // Cache'e kaydet
        await _cacheService.cacheImage(message, response['image_url']);
      } catch (e) {
        _messages.add(ChatMessage.error(
          'GÃ¶rsel oluÅŸturulurken bir hata oluÅŸtu. LÃ¼tfen tekrar deneyin.',
        ));
        rethrow;
      }
    });
  }

  void generateSurprisePrompt() {
    final random = _surprisePrompts[DateTime.now().millisecond % _surprisePrompts.length];
    sendMessage(random);
  }

  void clearMessages() {
    _messages.clear();
    initialize(); // BaÅŸlangÄ±Ã§ mesajÄ±nÄ± tekrar ekle
    notifyListeners();
  }

  // GÃ¶rseli indirme
  Future<void> downloadImage(String imageUrl) async {
    await handleAsync(() async {
      try {
        // await _cacheService.downloadImage(imageUrl);
      } catch (e) {
        throw Exception('GÃ¶rsel indirilirken bir hata oluÅŸtu: $e');
      }
    });
  }

  // GÃ¶rseli paylaÅŸma
  Future<void> shareImage(String imageUrl) async {
    await handleAsync(() async {
      try {
        // TODO: PaylaÅŸÄ±m iÅŸlemi
      } catch (e) {
        throw Exception('GÃ¶rsel paylaÅŸÄ±lÄ±rken bir hata oluÅŸtu: $e');
      }
    });
  }

  @override
  void dispose() {
    _messages.clear();
    super.dispose();
  }
}
